<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds">
    <springProperty scope="context" name="APP_NAME" source="spring.application.name"/>
    <property name="HOST_NAME" value="${HOSTNAME:-UNKNOWN}"/>
    <!-- 自定义参数监听 -->
    <contextListener class="com.sbx.core.log.listener.LoggerStartupListener"/>

    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>
    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN"
              value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <!-- 生成日志文件 -->
    <appender name="INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志文件输出的文件名 -->
            <FileNamePattern>logs/info-%d{yyyy-MM-dd}.log</FileNamePattern>
            <MaxHistory>1</MaxHistory>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <pattern>
                    <pattern>
                        {
                        "@timestamp":"%d{yyyy-MM-dd HH:mm:ss.SSS}",
                        "APP_NAME":"${APP_NAME}",
                        "traceId":"%mdc{traceId}",
                        "spanId":"%mdc{spanId}",
                        "source_host":"${HOST_NAME}",
                        "method":"%method",
                        "level":"%level",
                        "line_number":"%line",
                        "thread_name":"%thread",
                        "class":"%logger{39}",
                        "message":"%m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}",
                        "@class":"%mdc{class}",
                        "@method":"%mdc{method}",
                        "@line_number":"%mdc{line}",
                        "@file":"%mdc{file}"
                        }
                    </pattern>
                </pattern>
            </providers>
        </encoder>
        <!-- 打印日志级别 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- 生成日志文件 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/${APP_NAME}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志文件输出的文件名 -->
            <FileNamePattern>logs/${APP_NAME}-%d{yyyy-MM-dd}.log</FileNamePattern>
            <MaxHistory>1</MaxHistory>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <pattern>
                    <pattern>
                        {
                        "@timestamp":"%d{yyyy-MM-dd HH:mm:ss.SSS}",
                        "level":"%level",
                        "APP_NAME":"${APP_NAME}",
                        "traceId":"%mdc{traceId}",
                        "message":"%m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}",
                        "spanId":"%mdc{spanId}",
                        "source_host":"${HOST_NAME}",
                        "method":"%method",
                        "line_number":"%line",
                        "thread_name":"%thread",
                        "class":"%logger{39}",
                        "@class":"%mdc{class}",
                        "@method":"%mdc{method}",
                        "@line_number":"%mdc{line}",
                        "@file":"%mdc{file}"
                        }
                    </pattern>
                </pattern>
            </providers>
        </encoder>
    </appender>

    <!-- 生成日志文件 -->
    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志文件输出的文件名 -->
            <FileNamePattern>logs/error-%d{yyyy-MM-dd}.log</FileNamePattern>
            <MaxHistory>1</MaxHistory>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <pattern>
                    <pattern>
                        {
                        "@timestamp":"%d{yyyy-MM-dd HH:mm:ss.SSS}",
                        "APP_NAME":"${APP_NAME}",
                        "traceId":"%mdc{traceId}",
                        "spanId":"%mdc{spanId}",
                        "source_host":"${HOST_NAME}",
                        "method":"%method",
                        "level":"%level",
                        "line_number":"%line",
                        "thread_name":"%thread",
                        "class":"%logger{39}",
                        "message":"%m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}",
                        "@class":"%mdc{class}",
                        "@method":"%mdc{method}",
                        "@line_number":"%mdc{line}",
                        "@file":"%mdc{file}"
                        }
                    </pattern>
                </pattern>
            </providers>
        </encoder>
        <!-- 打印日志级别 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <if condition='property("ELK_MODE").toUpperCase().contains("TRUE")'>
        <then>
            <!-- 推送日志至elk -->
            <appender name="INFO_LOGSTASH" class="net.logstash.logback.appender.LogstashTcpSocketAppender">
                <destination>${DESTINATION}</destination>
                <!-- 日志输出编码 -->
                <encoder charset="UTF-8" class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
                    <providers>
                        <timestamp>
                            <timeZone>UTC</timeZone>
                        </timestamp>
                        <pattern>
                            <pattern>
                                {
                                "@timestamp":"%d{yyyy-MM-dd HH:mm:ss.SSS}",
                                "APP_NAME":"${APP_NAME}",
                                "traceId":"%mdc{traceId}",
                                "spanId":"%mdc{spanId}",
                                "source_host":"${HOST_NAME}",
                                "method":"%method",
                                "level":"%level",
                                "line_number":"%line",
                                "thread_name":"%thread",
                                "class":"%logger{39}",
                                "message":"%m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}",
                                "@class":"%mdc{class}",
                                "@method":"%mdc{method}",
                                "@line_number":"%mdc{line}",
                                "@file":"%mdc{file}"
                                }
                            </pattern>
                        </pattern>
                    </providers>
                </encoder>
                <!-- 打印日志级别 -->
                <filter class="ch.qos.logback.classic.filter.LevelFilter">
                    <level>INFO</level>
                    <onMatch>ACCEPT</onMatch>
                    <onMismatch>DENY</onMismatch>
                </filter>
            </appender>

            <!-- 推送日志至elk -->
            <appender name="ERROR_LOGSTASH" class="net.logstash.logback.appender.LogstashTcpSocketAppender">
                <destination>${DESTINATION}</destination>
                <!-- 日志输出编码 -->
                <encoder charset="UTF-8" class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
                    <providers>
                        <timestamp>
                            <timeZone>UTC</timeZone>
                        </timestamp>
                        <pattern>
                            <pattern>
                                {
                                "traceId": "%X{traceId}",
                                "logLevel": "%level",
                                "serviceName": "${springAppName:-SpringApp}",
                                "pid": "${PID:-}",
                                "thread": "%thread",
                                "class": "%logger{40}",
                                "line":"%L",
                                "message": "%message"
                                }
                            </pattern>
                        </pattern>
                    </providers>
                </encoder>
                <!-- 打印日志级别 -->
                <filter class="ch.qos.logback.classic.filter.LevelFilter">
                    <level>ERROR</level>
                    <onMatch>ACCEPT</onMatch>
                    <onMismatch>DENY</onMismatch>
                </filter>
            </appender>
        </then>
    </if>

    <!-- 日志输出级别 -->
    <root level="INFO">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="${INFO_APPENDER}"/>
        <appender-ref ref="${ERROR_APPENDER}"/>
        <appender-ref ref="FILE"/>
    </root>

    <logger name="net.sf.ehcache" level="INFO"/>
    <logger name="druid.sql" level="INFO"/>
    <logger name="com.alibaba.dubbo" level="DEBUG"/>

    <!-- 减少nacos日志 -->
    <logger name="com.alibaba.nacos" level="ERROR"/>

</configuration>
